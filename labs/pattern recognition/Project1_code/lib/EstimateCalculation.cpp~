#include <iostream>
#include <cstdlib>
#include <cmath>
#include "Matrix.h"
#include "Pr.h"

using namespace std;

Estimate estimateCalculation(const Matrix &train, int c)
{
	double varavg;
	Matrix *means, *covs, tmp;
  	int nctr;
	int nf,i, j;  	

	// get the size of input raw data
    nctr = train.getCol();    
    nf = nctr-1;

	
    // the mean is an array of nfx1 matrix of size c and the cov is an array of nf x nf matrix of size c
    means = (Matrix *) new Matrix [c];
    for (i=0; i<c; i++)
      means[i].createMatrix(nf, 1);
    covs = (Matrix *) new Matrix [c];
    for (i=0; i<c; i++)
      covs[i].createMatrix(nf, nf);
	
	// calculate the mean and covariance

    for (i=0; i<c; i++) {
      tmp = getType(train, i);
      covs[i] = cov(tmp, nf);
      means[i] = mean(tmp, nf);
      
    }

    Estimate est(nf,c);	
	est.setMean(means);
	est.setCovariance(covs);
    return est; 
}
